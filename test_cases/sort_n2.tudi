game sort_n2;
canvas = 10, 10;

func create_vec : int[10] (int len) {
    declare {
        int[10] new_vec;
        int i;
    }

    for (i = 0; i < len; i = i + 1) {
        Print("Vec[");
        Print(i);
        Print("]: ");
        Read(new_vec[i]);
    }

    return new_vec;
}

func print_vec : void (int[10] vec, int len) {
    declare {
        int i;
    }

    for (i = 0; i < len; i = i + 1) {
        Print("Vec[");
        Print(i);
        Print("]: ");
        Print(vec[i]);
        Print("\n");
    }
}

func sort : int[10] (int[10] vec, int len) {
    declare {
        int i, j;
        int temp;
    }

    for (i = 0; i < len; i = i + 1) {
        for (j = i; j < len; j = j + 1) {
            if (vec[i] > vec[j]) {
                temp = vec[j];
                vec[j] = vec[i];
                vec[i] = temp;
            }
        }
    }

    return vec;
}

func Start : void () {
    declare {
        int[10] vec;
        int len;
        int i;
    }

    len = 0;
    while (len <= 0 o len > 10) {
        Print("Capacidad de tu arreglo (0 < N <= 10): ");
        Read(len);
    }

    Print("Rellena tu arreglo:\n");
    vec = create_vec(len);

    Print("Sorteando ando\n");
    vec = sort(vec, len);

    Print("Resultado del sort:\n");
    print_vec(vec, len);
}

func Update : void () {
    game_over;
}