game snake;
canvas = 720, 480;

declare {
    int snake_speed, direction, change_to, score, event, counter_body;
    int[2] snake_position;
    int[500, 2] snake_body;
    bool fruit_spawn;
    int[2] fruit_position;
}

func show_score : void () {
    write_screen(score);
}

func Start : void () {
    snake_speed = 15;
    snake_position[0] = 100;
    snake_position[1] = 50;

    snake_body[0,0] = 100;
    snake_body[0,1] = 50;
    snake_body[1,0] = 90;
    snake_body[1,1] = 50;
    snake_body[2,0] = 80;
    snake_body[2,1] = 50;
    snake_body[3,0] = 70;
    snake_body[3,1] = 50;

    fruit_spawn = true;
    random(1, 72, fruit_position[0]);
    random(1, 48, fruit_position[1]);
    fruit_position[0] = fruit_position[0] * 10;
    fruit_position[1] = fruit_position[1] * 10;
    Print(fruit_position[0]);
    Print(fruit_position[1]);

    direction = 1;
    change_to = direction;
    score = 0;
    counter_body = 0;

    init_game;
}

func Update : void () {
    declare {
        int i;
    }
    get_event(event);

    if(event == 3) {
        change_to = 3;
    } else if (event == 1) {
        change_to = 1;
    } else if (event == 2) {
        change_to = 2;
    } else if (event == 0) {
        change_to = 0;
    }

    if(change_to == 3 y direction != 1) {
        direction = 3;
    } else if(change_to == 1 y direction != 3) {
        direction = 1;
    } else if(change_to == 2 y direction != 0) {
        direction = 2;
    } else if(change_to == 0 y direction != 2) {
        direction = 0;
    }

    if (direction == 3) {
        snake_position[1] = snake_position[1] - 10;
    } else if (direction == 1) {
        snake_position[1] = snake_position[1] + 10;
    } else if (direction == 2) {
        snake_position[0] = snake_position[0] - 10;
    } else if (direction == 0) {
        snake_position[0] = snake_position[0] + 10;
    }

    for (i = 3+counter_body; i > 0; i = i - 1) {
        snake_body[i,0] = snake_body[i-1,0];
        snake_body[i,1] = snake_body[i-1,1];
    }
    snake_body[0,0] = snake_position[0];
    snake_body[0,1] = snake_position[1];

    if (snake_position[0] == fruit_position[0] y snake_position[1] == fruit_position[1]) {
        score = score + 10;
        fruit_spawn = false;
        counter_body = counter_body + 1;
    }

    if (no fruit_spawn) {
        random(1, 72, fruit_position[0]);
        random(1, 48, fruit_position[1]);
        fruit_position[0] = fruit_position[0] * 10;
        fruit_position[1] = fruit_position[1] * 10;
    }

    fruit_spawn = true;
    set_fill("BLACK");

    for (i = 0; i < 4 + counter_body; i = i + 1) {
        draw_rect("GREEN", snake_body[i, 0], snake_body[i, 1], 10, 10);
    }
    draw_rect("WHITE", fruit_position[0], fruit_position[1], 10, 10);

    if (snake_position[0] < 0 o snake_position[0] > 710) {
        game_over;
    }

    if (snake_position[1] < 0 o snake_position[1] > 470) {
        game_over;
    }

    for (i = 1; i < 4 + counter_body; i = i + 1) {
        if (snake_position[0] == snake_body[i, 0] y snake_position[1] == snake_body[i, 1]) {
            game_over;
        }
    }

    show_score();

    update_game;
    tick(snake_speed);
}
