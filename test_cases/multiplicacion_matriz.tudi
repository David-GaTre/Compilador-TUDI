game multiplicacion_matriz;
canvas = 10, 10;

func print_mat : void (int[10, 10] mat, int m, int n) {
    declare {
        int i, j;
    }

    for (i = 0; i < m; i = i + 1) {
        for (j = 0; j < n; j = j + 1) {
            Print("Mat[");
            Print(i);
            Print(", ");
            Print(j);
            Print("]: ");
            Print(mat[i, j]);
            Print("\n");
        }
    }
}

func create_mat : int[10, 10] (int m, int n) {
    declare {
        int[10, 10] new_mat;
        int i, j;
    }

    for (i = 0; i < m; i = i + 1) {
        for (j = 0; j < n; j = j + 1) {
            Print("Mat[");
            Print(i);
            Print(", ");
            Print(j);
            Print("]: ");
            Read(new_mat[i, j]);
        }
    }

    return new_mat;
}


func mat_mul : int[10, 10] (int[10, 10] mat_a, int[10, 10] mat_b, int m, int p, int n) {
    declare {
        int[10, 10] mat_c;
        int i, j, k;
    }

    for (i = 0; i < m; i = i + 1) {
        for (j = 0; j < p; j = j + 1) {
            for (k = 0; k < n; k = k + 1) {
                mat_c[i, j] = mat_c[i, j] + mat_a[i, k] * mat_b[k, j];
            }
        }
    }

    return mat_c;
}

func Start : void () {
    declare {
        int m, n, p;
        int i, j, k;
        int[10, 10] mat_a, mat_b, mat_res;
    }

    Print("MultiplicaciÃ³n de matrices -> M(m x n) * M(n x p) = M(m x p)\n");

    m = 0;
    while (m <= 0 o m > 10) {
        Print("Dimension m (0 < m <= 10): ");
        Read(m);
    }

    n = 0;
    while (n <= 0 o n > 10) {
        Print("Dimension n (0 < n <= 10): ");
        Read(n);
    }

    p = 0;
    while (p <= 0 o p > 10) {
        Print("Dimension p (0 < p <= 10): ");
        Read(p);
    }

    Print("Rellena matriz A:\n");
    mat_a = create_mat(m, n);

    Print("Rellena matriz B:\n");
    mat_b = create_mat(n, p);

    Print("Multiplicando matrices ando\n");
    mat_res = mat_mul(mat_a, mat_b, m, p, n);

    Print("Resultado de MatA x MatB:\n");
    print_mat(mat_res, m, p);
}

func Update : void () {
    game_over;
}